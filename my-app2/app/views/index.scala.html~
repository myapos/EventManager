@(events: List[Event],username: String, role:String)
@main(title = "Home", null,events) {

<div class="row"> 	  
	<div class="col-xs-4 welcome-msg"> </div>
	<div class="col-xs-4 welcome-msg"> </div>
	<div class="col-xs-4 welcome-msg">  
        
      @role match {   
 		case "user" => {
 		   Welcome, @username. Currently you are logged in as @role. <a href="@routes.Application.logout()">Logout</a>
  		}
  		case "admin" => {
  		  <p>Welcome, @username. Currently you are logged in as @role. <br>
  		  If you want to logout click here:   <a href="@routes.Application.logout()">Logout</a> <br>
  		  If you want to upload an event click here: <a href="@routes.Application.admin()">admin area</a>.</p>
  		}
  		case "" => {
  		  Welcome guest.
  		}
}		
	</div>
</div>
<div class="row">  	  
        <div class="col-xs-12">
				<h1>Here you can see all events that are registered in our system</h1>			
			</div>
</div> 
<div class="row" >  	  
         <div class="col-xs-6" class="calendar-container">			
				<h3></h3>
				<div id="calendar"></div>
			</div>
		 <div class="col-xs-6" class="latest-events-container">			
				<h3>Latest Events</h3>
				<!--<div class="smartmarquee latest-events">-->
				<div class="latest-events">
				<ul id="vertical-ticker">
					<!-- -->
					@for(event <- events){
 						<li> @event.description	@event.day_start - @event.day_end @event.hours 
 						@event.location.name @event.location.address
 								
 						</li>   
    					}	
				</ul>
			   </div>
			</div>
</div>
<div class="row">  	  
        <div class="col-xs-12" id="search-form">
				<div class="input-group">
     			 <input type="text" class="form-control" placeholder="Search for...">
      			<span class="input-group-btn">
       			 <button class="btn btn-default" type="button">Go!</button>
      			</span>
    			</div><!-- /input-group -->
			</div>
</div>
<div class="row">  	  
        <div class="col-xs-12">			
				<h3>Event Map</h3>
				<div id="map"></div>
				<!--<script src="@routes.Assets.at("javascripts/my.js")"></script>-->
				
				<script type="text/javascript" >
				$(document).ready(function() {

alert("Helo from external jquery script");
var locations = [
      @for((myevent, index) <- events.zipWithIndex) {
    		
			@if(index <= events.size-2){
       		 {
           	 	['@myevent.location.name', @myevent.location.latitude ,@myevent.location.longitude],
       		 },
       	} else {
       			{
           	 	['@myevent.location.name', @myevent.location.latitude ,@myevent.location.longitude],
       		 }
       	
       	}
        
        }
    ];   
  
    var myLatlng = new google.maps.LatLng(35.3220164, 25.1350708);
	 var element = document.getElementById("map");
 
	var map = new google.maps.Map(element, {
 	  center: myLatlng,
 	  zoom: 13,
 	  mapTypeId: "OSM",
 	  mapTypeControl: true,
 	  streetViewControl: true
	 });
	 
    var infowindow = new google.maps.InfoWindow();
    var marker, i;
    var markers = new Array();
    for (i = 0; i < locations.length; i++) {  
      marker = new google.maps.Marker({
        position: new google.maps.LatLng(locations[i][1], locations[i][2]),
        map: map
      });
      markers.push(marker);
      google.maps.event.addListener(marker, 'click', (function(marker, i) {
        return function() {
          infowindow.setContent(locations[i][0]);
          infowindow.open(map, marker);
        }
      })(marker, i));
    }
    
    function AutoCenter() {
      //  Create a new viewpoint bound
      var bounds = new google.maps.LatLngBounds();
      //  Go through each...
      $.each(markers, function (index, marker) {
      bounds.extend(marker.position);
      });
      //  Fit these bounds to the map
      map.fitBounds(bounds);
    }
    AutoCenter();



//Define OSM map type pointing at the OpenStreetMap tile server
map.mapTypes.set("OSM", new google.maps.ImageMapType({
  getTileUrl: function(coord, zoom) {
  // "Wrap" x (logitude) at 180th meridian properly
  /* NB: Don't touch coord.x because coord param is by reference, and changing its x property 
  break's something in Google's lib */
  var tilesPerGlobe = 1 << zoom;
  var x = coord.x % tilesPerGlobe;
  if (x < 0) {
  x = tilesPerGlobe+x;
  }
  // Wrap y (latitude) in a like manner if you want to enable vertical infinite scroll
  return "http://tile.openstreetmap.org/" + zoom + "/" + x + "/" + coord.y + ".png";
  },
 tileSize: new google.maps.Size(256, 256),
 name: "OpenStreetMap",
 maxZoom: 18
}));
alert("Helo from external jquery script");


});
				</script> 
			</div>
</div>
   
            

      

<!--
<script type="text/javascript">
            
</script>-->
}